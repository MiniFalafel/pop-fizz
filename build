#!/bin/bash

## --- CONFIG --- ##

SRC_PATHS=("./src" "./vendor/glad/src")
INCLUDE_PATHS=("/usr/include" "vendor/glad/include")
LINK_PATHS=("/usr/lib")
BIN_FILE="./bin/pop-fizz"
CUSTOM_ARGS="-lglfw"

LOG_FILE=".build.log"

## --- FUNCITONS --- ##
function yes_or_no {
    while true; do
        read -p "$* [y/n]: " yn
        case $yn in
            [Yy]*) return 0  ;;  
            [Nn]*) echo "Aborted" ; return  1 ;;
        esac
    done
}

## --- RUN IF NO CHANGES -- ##
# highjacking git for this now that we're in a repo
THIS_COMMIT="NO_GIT_SUPPORT"
if [[ $(type -p git) ]]; then
    THIS_COMMIT="$(git log | head -n 1 | awk '{print $2}')"
    LAST_BUILD="$(head -n 1 $LOG_FILE)"
    if [[ ! `git status --porcelain` && $THIS_COMMIT == $LAST_BUILD ]]; then
        echo "No recent changes! Running last build..."
        exec "$BIN_FILE"
        exit
    fi
fi

## --- BUILD --- ##

# update log file
echo "$THIS_COMMIT" > $LOG_FILE

# Get all the cpp files in the source directory
echo "Gathering source files..."
SRC_FILES=""
for path in "${SRC_PATHS[@]}"; do
    echo "==> Checking \"$path\""
    SRC_FILES="$SRC_FILES $(find $path -type f \( -iname \*.cpp -o -iname \*.c \) | tr '\n' ' ')"
done

# Put together include and lib directories
echo "Gathering includes..."
INCLUDES=""
for path in "${INCLUDE_PATHS[@]}"; do
    echo "==> Including \"$path\""
    INCLUDES="$INCLUDES -I$path"
done

echo "Gathering links..."
LINKS=""
for path in "${LINK_PATHS[@]}"; do
    echo "==> Linking \"$path\""
    LINKS="$LINKS -L$path"
done


# Start the build
echo "Starting build..."
BUILD_CMD="clang++ $SRC_FILES -o $BIN_FILE $INCLUDES $LINKS $CUSTOM_ARGS"
# log the build command for debug
echo "$BUILD_CMD" >> $LOG_FILE
# finally run it
`$BUILD_CMD`

## --- RUN --- ##
# Check that clang compiled successfully
SUCCESS=$?
if [ $SUCCESS == '0' ]; then
    echo "----- BUILD SUCCESS -----"
    echo -e "Running application...\n"
    # Success!, run the newly built file
    exec "$BIN_FILE"
else
    echo "----- BUILD FAILURE -----"
    # Build failed. Ask the user if they want to run the last build anyway
    yes_or_no "Do you want to run last build anyway?" && (echo -e "\n"; exec "$BIN_FILE")
fi
